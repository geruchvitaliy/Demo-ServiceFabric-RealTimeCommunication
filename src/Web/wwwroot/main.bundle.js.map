{"version":3,"sources":["C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/$_gendir lazy","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.component.css","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.component.html","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.component.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.module.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/dashboard/dashboard.component.html","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/dashboard/dashboard.component.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/dashboard/index.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/directives/bing-map.directive.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/directives/index.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/environments/environment.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/main.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/models/deviceStatus.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/models/index.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/services/devices.service.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/services/index.ts","C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/services/signalr.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<dashboard></dashboard>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { SignalRService, DevicesService } from 'services';\r\n\r\nimport { BingMapDirective } from 'directives';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from 'dashboard';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        DashboardComponent,\r\n        BingMapDirective\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpModule\r\n    ],\r\n    providers: [\r\n        SignalRService,\r\n        DevicesService\r\n    ],\r\n    bootstrap: [\r\n        AppComponent\r\n    ]\r\n})\r\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/app/app.module.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <h4>Devices and Locations (left side list displays first {{displayLeftListItemsCount}} items):</h4>\\r\\n        <ul style=\\\"height: 700px; overflow:auto;\\\">\\r\\n            <li *ngFor=\\\"let item of dataToDisplayOnView\\\">\\r\\n                DeviceId: {{ item.deviceId.id }}; Latitude: {{ item.lastLocation.latitude }}; Longitude: {{ item.lastLocation.longitude }}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-8\\\">\\r\\n        <h4>Cell values (in minutes): {{cellData}}</h4>\\r\\n        <bing-map (mapLoaded)=\\\"onMapLoaded()\\\"\\r\\n                  (markerSelected)=\\\"onMarkerSelected($event)\\\"\\r\\n                  (cellSelected)=\\\"onCellSelected($event)\\\"\\r\\n                  (cellOver)=\\\"onCellOver($event)\\\"\\r\\n                  style=\\\"height: 700px; position:absolute;\\\">\\r\\n        </bing-map>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/dashboard/dashboard.component.html\n// module id = ../../../../../src/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ViewChild } from '@angular/core'\r\nimport { IDeviceId, IDeviceStatus, DeviceStatusEnum } from 'models'\r\nimport { SignalRService, DevicesService, ISignalRSession } from 'services'\r\nimport { BingMapDirective, IBingMapPushpin, IBingMapInfobox, IBingMapCell, IMarkerSelectedEventArgs, ICellSelectedEventArgs } from 'directives'\r\nimport { Subscription } from \"rxjs/Subscription\"\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n    private subscription: Subscription;\r\n    private signalRSession: ISignalRSession;\r\n    private loading: boolean = true;\r\n    private loadPageNumber: any;\r\n    private loadTempData: IDeviceStatus[] = [];\r\n    private displaying: boolean;\r\n    private displayTimer: any;\r\n    private displayLeftListItemsCount: number = 100;\r\n\r\n    @ViewChild(BingMapDirective) bingMapDirective: BingMapDirective;\r\n    dataToDisplayOnView: IDeviceStatus[] = [];\r\n    dataToDisplayOnMap: IDeviceStatus[] = [];\r\n    cellData: any;\r\n\r\n    constructor(private readonly changeDetectorRef: ChangeDetectorRef,\r\n        private readonly zone: NgZone,\r\n        private readonly signalRService: SignalRService,\r\n        private readonly devicesService: DevicesService)\r\n    { }\r\n\r\n    private onMapLoaded() {\r\n        this.loadDevicesAndStatuses();\r\n    }\r\n\r\n    private loadDevicesAndStatuses() {\r\n        this.devicesService\r\n            .getDevicesCount()\r\n            .then(count => {\r\n                this.loadPageNumber = 0;\r\n\r\n                this.onLoadDevicesAndStatuses(count)\r\n                    .then(statuses => {\r\n                        this.zone.run(() => {\r\n                            this.dataToDisplayOnView = statuses.splice(0, this.displayLeftListItemsCount);\r\n                        });\r\n                        this.changeDetectorRef.markForCheck();\r\n                    });\r\n            });\r\n    }\r\n\r\n    private onLoadDevicesAndStatuses(count: number): Promise<IDeviceStatus[]> {\r\n        const pageSize = 50000;\r\n\r\n        return this.devicesService\r\n            .getDevicesAndStatuses(this.loadPageNumber, pageSize)\r\n            .then(statuses => {\r\n                this.loadTempData = this.loadTempData.concat(statuses);\r\n\r\n                this.receiveDevicesAndStatuses(this.loadTempData, null, true);\r\n                while (this.dataToDisplayOnMap.length)\r\n                    this.displayDevicesAndStatuses();\r\n\r\n                if (this.loadTempData.length >= count) {\r\n                    this.loadTempData = [];\r\n                    this.loading = false;\r\n\r\n                    this.displayTimer = setInterval(() => this.displayDevicesAndStatuses(), 100);\r\n                }\r\n                else {\r\n                    this.loadPageNumber++;\r\n                    this.onLoadDevicesAndStatuses(count);\r\n                }\r\n\r\n                return statuses;\r\n            });\r\n    }\r\n\r\n    private displayDevicesAndStatuses() {\r\n        if (this.displaying || !this.dataToDisplayOnMap.length)\r\n            return;\r\n\r\n        this.displaying = true;\r\n\r\n        const takeCount = 10000;\r\n        let group = this.dataToDisplayOnMap.splice(0, takeCount);\r\n\r\n        group.forEach(status => {\r\n            let details: IBingMapPushpin = {\r\n                color: status.status === DeviceStatusEnum.Ok ? 'Green' :\r\n                    status.status === DeviceStatusEnum.Warning ? 'Orange' : 'Red'\r\n            };\r\n            this.bingMapDirective.addMarker(status.lastLocation, status, details);\r\n        });\r\n\r\n        console.log(`Updated ${group.length} locations. Pending: ${this.dataToDisplayOnMap.length}`);\r\n        group = null;\r\n\r\n        let signalRSessionEnded = this.signalRSession ? this.signalRSession.sentObjects >= this.signalRSession.totalObjects : true;\r\n        if (!this.dataToDisplayOnMap.length && signalRSessionEnded) {\r\n            let details = <IBingMapCell>{\r\n                aggregationProperty: 'lastCommunicationElapsedTime',\r\n                colorCallback: this.getCellColor,\r\n            };\r\n            this.bingMapDirective.displayMap(details);\r\n            console.log(`Displayed all locations`);\r\n        }\r\n\r\n        this.displaying = false;\r\n    }\r\n\r\n    private receiveDevicesAndStatuses(statuses: IDeviceStatus[], session?: ISignalRSession, clear: boolean = false) {\r\n        if (!statuses || !statuses.length)\r\n            return;\r\n\r\n        this.signalRSession = session;\r\n        this.dataToDisplayOnMap = clear ? [].concat(statuses) : this.dataToDisplayOnMap.concat(statuses);\r\n        console.log(`Received ${statuses.length} locations`);\r\n    }\r\n\r\n    private getCellColor(bin, min, max) {\r\n        if (bin.metrics.average < 720)\r\n            return 'rgba(0,128,0,0.3)';\r\n        else if (bin.metrics.average >= 720 && bin.metrics.average < 1440)\r\n            return 'rgba(255,165,0,0.3)';\r\n        else\r\n            return 'rgba(255,0,0,0.3)';\r\n    }\r\n\r\n    private onMarkerSelected($event: IMarkerSelectedEventArgs) {\r\n        let status = <IDeviceStatus>$event.metadata;\r\n        this.devicesService\r\n            .getDeviceProfile(status.deviceId)\r\n            .then(res => {\r\n                let statusString = status.status === 2 ? 'Ok' : status.status === 1 ? 'Warning' : 'Error';\r\n                let details: IBingMapInfobox = {\r\n                    title: res.name,\r\n                    description: `Device Id: ${status.deviceId.id};<br/> Status: ${statusString};<br/> Last Communication: ${status.lastCommunicationDate};`\r\n                };\r\n                this.bingMapDirective.displayInfobox(status.lastLocation, details);\r\n            });\r\n    }\r\n\r\n    private getCellValues(e: ICellSelectedEventArgs) {\r\n        if (!e)\r\n            return null;\r\n\r\n        let minValue = Math.min.apply(null, e.metadata.map(x => (<IDeviceStatus>x).lastCommunicationElapsedTime));\r\n        let maxValue = Math.max.apply(null, e.metadata.map(x => (<IDeviceStatus>x).lastCommunicationElapsedTime));\r\n\r\n        return `Average: ${e.average}; Min: ${minValue}; Max: ${maxValue}; Devices Count: ${e.count}`;\r\n    }\r\n\r\n    private onCellSelected($event: ICellSelectedEventArgs) {\r\n        if (!$event)\r\n            return;\r\n\r\n        alert(`In minutes. ${this.getCellValues($event)}`);\r\n    }\r\n\r\n    private onCellOver($event: ICellSelectedEventArgs) {\r\n        this.cellData = this.getCellValues($event);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.signalRService\r\n            .subscribeOnDevicesUpdates()\r\n            .subscribe(message => {\r\n                if (!this.loading)\r\n                    this.receiveDevicesAndStatuses(message.data, message.session);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n            this.subscription = null;\r\n        }\r\n\r\n        if (this.displayTimer) {\r\n            clearInterval(this.displayTimer);\r\n            this.displayTimer = null;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/dashboard/dashboard.component.ts","export * from './dashboard.component'\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/dashboard/index.ts","import { Directive, EventEmitter, ElementRef, AfterContentInit } from '@angular/core'\r\nimport { ILocation } from \"models\";\r\n\r\n@Directive({\r\n    selector: 'bing-map',\r\n    outputs: ['mapLoaded', 'markerSelected', 'cellSelected', 'cellOver'],\r\n    inputs: []\r\n})\r\nexport class BingMapDirective implements AfterContentInit {\r\n    private readonly retryCount = 5;\r\n    private readonly clusterLayerGridSize = 100;\r\n    private readonly dataBinningRadius = 25;\r\n    private map: Microsoft.Maps.Map;\r\n    private clusterLayer: Microsoft.Maps.ClusterLayer;\r\n    private dataBinningLayer: Microsoft.Maps.DataBinningLayer;\r\n    private markers: Microsoft.Maps.Pushpin[] = [];\r\n    private infobox: Microsoft.Maps.Infobox;\r\n\r\n    mapLoaded: EventEmitter<any>;\r\n    markerSelected: EventEmitter<IMarkerSelectedEventArgs>;\r\n    cellSelected: EventEmitter<ICellSelectedEventArgs>;\r\n    cellOver: EventEmitter<ICellSelectedEventArgs>;\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n        this.mapLoaded = new EventEmitter(true);\r\n        this.markerSelected = new EventEmitter<IMarkerSelectedEventArgs>(true);\r\n        this.cellSelected = new EventEmitter<ICellSelectedEventArgs>(true);\r\n        this.cellOver = new EventEmitter<ICellSelectedEventArgs>(true);\r\n    }\r\n\r\n    private waitForScriptLoads(loadCount: number = 0) {\r\n        setTimeout(() => {\r\n            if (Microsoft)\r\n                this.initializeMap();\r\n            else {\r\n                if (++loadCount < this.retryCount)\r\n                    this.waitForScriptLoads(loadCount);\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    private initializeMap() {\r\n        this.map = new Microsoft.Maps.Map(this.elementRef.nativeElement, {\r\n            credentials: 'Amm1YyItq9vB1Bj839nYBNdTUsTNEcwZi3hgjwqrE6NjwoZ0MZMs4sc-c_Mxlht2',\r\n            bounds: new Microsoft.Maps.LocationRect(new Microsoft.Maps.Location(0, 38), 8, 7) //Kenya\r\n        });\r\n\r\n        Microsoft.Maps.loadModule('Microsoft.Maps.DataBinning', () => {\r\n            this.dataBinningLayer = new Microsoft.Maps.DataBinningLayer();\r\n            Microsoft.Maps.Events.addHandler(this.dataBinningLayer, 'click', (e) => {\r\n                this.cellSelected.emit(this.getCellSelectedEventArgs(e));\r\n            });\r\n            Microsoft.Maps.Events.addHandler(this.dataBinningLayer, 'mouseover', (e) => {\r\n                e.primitive.setOptions(<Microsoft.Maps.IDataBinningOptions>{ strokeColor: 'blue' });\r\n                this.cellOver.emit(this.getCellSelectedEventArgs(e));\r\n            });\r\n            Microsoft.Maps.Events.addHandler(this.dataBinningLayer, 'mouseout', (e) => {\r\n                e.primitive.setOptions(<Microsoft.Maps.IDataBinningOptions>{ strokeColor: 'white' });\r\n                this.cellSelected.emit(null);\r\n                this.cellOver.emit(null);\r\n            });\r\n\r\n            this.map.layers.insert(this.dataBinningLayer);\r\n        });\r\n\r\n        Microsoft.Maps.loadModule('Microsoft.Maps.Clustering', () => {\r\n            this.clusterLayer = new Microsoft.Maps.ClusterLayer([], { gridSize: this.clusterLayerGridSize });\r\n            Microsoft.Maps.Events.addHandler(this.clusterLayer, 'click', (e) => {\r\n                if (!e.primitive || !e.primitive.metadata)\r\n                    return;\r\n\r\n                let model = <IMarkerSelectedEventArgs>{\r\n                    metadata: e.primitive.metadata\r\n                };\r\n                this.markerSelected.emit(model);\r\n            });\r\n\r\n            this.map.layers.insert(this.clusterLayer);\r\n        });\r\n\r\n        this.mapLoaded.emit();\r\n    }\r\n\r\n    private getCellSelectedEventArgs(e: Microsoft.Maps.IMouseEventArgs): ICellSelectedEventArgs {\r\n        let primitive = <any>e.primitive;\r\n        let info = <Microsoft.Maps.IDataBinInfo>primitive.dataBinInfo;\r\n\r\n        return <ICellSelectedEventArgs>{\r\n            metadata: info.containedPushpins.map(x => x.metadata),\r\n            average: info.metrics.average,\r\n            count: info.metrics.count,\r\n            sum: info.metrics.sum\r\n        };\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.waitForScriptLoads();\r\n    }\r\n\r\n    addMarker(location: ILocation, metadata?: any, markerOptions?: IBingMapPushpin) {\r\n        if (!location)\r\n            return;\r\n\r\n        let pushpin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(location.latitude, location.longitude));\r\n        pushpin.setOptions(markerOptions);\r\n        pushpin.metadata = metadata;\r\n\r\n        this.markers.push(pushpin);\r\n    }\r\n\r\n    displayMap(cellOptions?: IBingMapCell) {\r\n        if (this.dataBinningLayer && cellOptions) {\r\n            this.dataBinningLayer.clear();\r\n\r\n            let options = <Microsoft.Maps.IDataBinningOptions>{\r\n                dataBinType: Microsoft.Maps.DataBinType.square,\r\n                radius: this.dataBinningRadius,\r\n                distanceUnits: Microsoft.Maps.SpatialMath.DistanceUnits.Miles,\r\n                aggregationProperty: cellOptions.aggregationProperty,\r\n                colorCallback: cellOptions.colorCallback,\r\n                polygonOptions: { strokeColor: 'white' }\r\n            };\r\n            this.dataBinningLayer.setOptions(options);\r\n\r\n            this.dataBinningLayer.setPushpins(this.markers);\r\n        }\r\n\r\n        if (this.clusterLayer) {\r\n            this.clusterLayer.clear();\r\n\r\n            this.clusterLayer.setPushpins(this.markers);\r\n        }\r\n\r\n        this.markers = [];\r\n    }\r\n\r\n    displayInfobox(location: ILocation, infoboxOptions: IBingMapInfobox) {\r\n        if (!location || !infoboxOptions)\r\n            return;\r\n\r\n        let options = <Microsoft.Maps.IInfoboxOptions>infoboxOptions;\r\n        options.visible = true;\r\n\r\n        if (!this.infobox) {\r\n            this.infobox = new Microsoft.Maps.Infobox(new Microsoft.Maps.Location(location.latitude, location.longitude));\r\n            this.infobox.setOptions(options);\r\n            this.infobox.setMap(this.map);\r\n        }\r\n        else {\r\n            this.infobox.setLocation(new Microsoft.Maps.Location(location.latitude, location.longitude));\r\n            this.infobox.setOptions(options);\r\n        }\r\n    }\r\n\r\n    hideInfobox() {\r\n        if (!this.infobox)\r\n            return;\r\n\r\n        let options = this.infobox.getOptions();\r\n        options.visible = false;\r\n    }\r\n}\r\n\r\nexport interface ICellSelectedEventArgs {\r\n    metadata: any[];\r\n    average?: number;\r\n    count?: number;\r\n    sum?: number;\r\n}\r\n\r\nexport interface IMarkerSelectedEventArgs {\r\n    metadata: any;\r\n}\r\n\r\nexport interface IBingMapCell {\r\n    aggregationProperty: string;\r\n    colorCallback: (binInfo: any, min: any, max: any) => string;\r\n}\r\n\r\nexport interface IBingMapPushpin {\r\n    color?: string;\r\n    icon?: string;\r\n    title?: string;\r\n}\r\n\r\nexport interface IBingMapInfobox {\r\n    description?: string;\r\n    htmlContent?: string;\r\n    maxHeight?: number;\r\n    maxWidth?: number;\r\n    showCloseButton?: boolean;\r\n    showPointer?: boolean;\r\n    title?: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/directives/bing-map.directive.ts","export * from './bing-map.directive';\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/directives/index.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n    production: false,\n    apiServiceAddress: 'http://localhost:8105/',\n    signalRServiceAddress: 'http://localhost:8104/'\n};\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/environments/environment.ts","/// <reference path=\"../node_modules/bingmaps/scripts/microsoftmaps/microsoft.maps.all.d.ts\" />\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/main.ts","import { IDeviceId, ILocation } from 'models'\r\n\r\nexport interface IDeviceStatus {\r\n    deviceId: IDeviceId;\r\n    lastLocation: ILocation;\r\n    lastCommunicationElapsedTime: number;\r\n    lastCommunicationDate: string;\r\n    status: DeviceStatusEnum;\r\n}\r\n\r\nexport enum DeviceStatusEnum {\r\n    Error,\r\n    Warning,\r\n    Ok\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/models/deviceStatus.ts","export * from './deviceId';\r\nexport * from './device';\r\nexport * from './location';\r\nexport * from './deviceStatus';\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/models/index.ts","import { Injectable } from '@angular/core'\r\nimport { Http } from \"@angular/http\";\r\nimport { IDeviceId, IDevice, IDeviceStatus } from 'models'\r\nimport { environment } from 'environments/environment'\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class DevicesService {\r\n\r\n    constructor(private readonly http: Http)\r\n    { }\r\n\r\n    getDevicesCount(): Promise<number> {\r\n        return this.http\r\n            .get(`${environment.apiServiceAddress}api/device/count`)\r\n            .toPromise()\r\n            .then(x => x.json());\r\n    }\r\n\r\n    getDevicesAndStatuses(pageNumber: number, pageSize: number): Promise<IDeviceStatus[]> {\r\n        return this.http\r\n            .get(`${environment.apiServiceAddress}api/device/statuses?pageNumber=${pageNumber}&pageSize=${pageSize}`)\r\n            .toPromise()\r\n            .then(x => x.json());\r\n    }\r\n\r\n    getDeviceProfile(deviceId: IDeviceId): Promise<IDevice> {\r\n        return this.http\r\n            .get(`${environment.apiServiceAddress}api/device/${deviceId.id}/profile`)\r\n            .toPromise()\r\n            .then(x => x.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/services/devices.service.ts","export * from './signalr.service';\r\nexport * from './devices.service';\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/services/index.ts","import { Injectable } from '@angular/core'\r\nimport { Observable } from 'rxjs/Observable'\r\nimport { IDeviceId, IDeviceStatus } from 'models'\r\nimport { environment } from 'environments/environment'\r\n\r\n@Injectable()\r\nexport class SignalRService {\r\n    private connection: SignalR.Hub.Connection;\r\n    private devicesProxy: SignalR.Hub.Proxy;\r\n    private devicesData: Observable<ISignalRMessage<IDeviceStatus[]>>;\r\n\r\n    constructor() {\r\n        this.connection = $.hubConnection();\r\n\r\n        this.startDevicesProxy();\r\n\r\n        this.connection.stateChanged(state => {\r\n            switch (state.newState) {\r\n                case $.signalR.connectionState.connecting:\r\n                    console.log(\"SignalR hub connecting\");\r\n                    break;\r\n                case $.signalR.connectionState.connected:\r\n                    console.log(\"SignalR hub connected\");\r\n                    break;\r\n                case $.signalR.connectionState.reconnecting:\r\n                    console.log(\"SignalR hub reconnecting\");\r\n                    break;\r\n                case $.signalR.connectionState.disconnected:\r\n                    console.log(\"SignalR hub disconnected\");\r\n                    break;\r\n            }\r\n        });\r\n\r\n        this.connection.error(error => {\r\n            console.log(\"SignalR hub error:\");\r\n            console.log(error);\r\n        });\r\n\r\n        this.connection.url = `${environment.signalRServiceAddress}signalr`;\r\n        this.connection.start();\r\n    }\r\n\r\n    private startDevicesProxy() {\r\n        this.devicesProxy = this.connection.createHubProxy('DevicesHub');\r\n\r\n        this.devicesData = new Observable(observer => {\r\n            this.devicesProxy.on(\"statusesReceived\", (statuses: IDeviceStatus[], session: ISignalRSession) => {\r\n                let message = <ISignalRMessage<IDeviceStatus[]>>{ data: statuses, session };\r\n                observer.next(message);\r\n            });\r\n        });\r\n    }\r\n\r\n    subscribeOnDevicesUpdates(): Observable<ISignalRMessage<IDeviceStatus[]>> {\r\n        return this.devicesData;\r\n    }\r\n}\r\n\r\nexport interface ISignalRMessage<T> {\r\n    data: T;\r\n    session: ISignalRSession;\r\n}\r\n\r\nexport interface ISignalRSession {\r\n    sentObjects: number;\r\n    totalObjects: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Vitaliy/Source/Repos/Demo-ServiceFabric-RealTimeCommunication/src/Web.Frontend/src/services/signalr.service.ts"],"sourceRoot":"webpack:///"}